沉浸式大概可以分成三个阶段：
	Android4.4（API 19） - Android 5.0（API 21）：
	 	这个阶段可以实现沉浸式，但是表现得还不是很好，实现方式为: 通过FLAG_TRANSLUCENT_STATUS设置状态栏为透明并且为全屏模式，然后通过添加一个与StatusBar 一样大小的View，将View 的 background 设置为我们想要的颜色，从而来实现沉浸式。

	Android 5.0（API 21）以上版本： 
		在Android 5.0的时候，加入了一个重要的属性和方法 android:statusBarColor （对应方法为 setStatusBarColor），通过这个方法我们就可以轻松实现沉浸式。也就是说，从Android5.0开始，系统才真正的支持沉浸式。

	Android 6.0（API 23）以上版本：
		其实Android6.0以上的实现方式和Android 5.0 +是一样，为什么要将它归为一个单独重要的阶段呢？是因为从Android 6.0（API 23）开始，我们可以改状态栏的绘制模式，可以显示白色或浅黑色的内容和图标（除了魅族手机，魅族自家有做源码更改，6.0以下就能实现）

Android4.4（API 19） - Android 5.0（API 21）实现沉浸式的方式		
	1，代码设置
		activity.getWindow().addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);

	2，.xml -> theme中
		android:windowTranslucentStatus

	缺点：布局会占用状态栏
	解决方案：1，android:fitsSystemWindows=true
			2，创建一个和状态栏大小的view，占用

Android 5.0（API 21）以上实现沉浸式的方式
	1，代码设置
		getWindow().addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);
		//注意要清除 FLAG_TRANSLUCENT_STATUS flag
		getWindow().clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
		getWindow().setStatusBarColor(Color.RED);

	2，xml设置
		<style name="MDTheme" parent="Theme.Design.Light.NoActionBar">
        	<item name="android:windowTranslucentStatus">false</item>
        	<item name="android:windowDrawsSystemBarBackgrounds">true</item>
        	<item name="android:statusBarColor">#FF0000</item>
    	</style>		

Android 6.0 + 实现状态栏字色和图标浅黑色
	1，代码设置
		getWindow().getDecorView().setSystemUiVisibility(
                    View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN | View.SYSTEM_UI_FLAG_LIGHT_STATUS_BAR);

    2，xml设置
    	<style name="MDTheme" parent="Theme.Design.Light.NoActionBar">
        	<item name="android:windowTranslucentStatus">false</item>
        	<item name="android:windowDrawsSystemBarBackgrounds">true</item>
        	<item name="android:statusBarColor">@android:color/holo_red_light</item>
        	<!-- Android 6.0以上 状态栏字色和图标为浅黑色-->
        	<item name="android:windowLightStatusBar">true</item>
    	</style>                

隐藏状态栏，导航栏
 //全屏显示，拉出状态栏和导航栏后一会后消失。
        if (Build.VERSION.SDK_INT >= 21) {
            View decorView = getWindow().getDecorView();
            decorView.setSystemUiVisibility(View.SYSTEM_UI_FLAG_LAYOUT_STABLE
                            | View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION
                            | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN
                            | View.SYSTEM_UI_FLAG_HIDE_NAVIGATION
                            | View.SYSTEM_UI_FLAG_FULLSCREEN
                            | View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY);
        }


		View.SYSTEM_UI_FLAG_VISIBLE：	显示状态栏，Activity不全屏显示(恢复到有状态的正常情况)。

		View.INVISIBLE：				 	隐藏状态栏，同时Activity会伸展全屏显示。

		View.SYSTEM_UI_FLAG_FULLSCREEN：Activity全屏显示，且状态栏被隐藏覆盖掉。

		View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN：Activity全屏显示，但状态栏不会被隐藏覆盖，状态栏依然可见，Activity顶端布局部分会被状态遮住。
		View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION：效果同View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN

		View.SYSTEM_UI_LAYOUT_FLAGS：效果同View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN

		View.SYSTEM_UI_FLAG_HIDE_NAVIGATION：隐藏虚拟按键(导航栏)。有些手机会用虚拟按键来代替物理按键。
		
		View.SYSTEM_UI_FLAG_LOW_PROFILE：状态栏显示处于低能显示状态(low profile模式)，状态栏上一些图标显示会被隐藏










