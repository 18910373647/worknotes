反射
    1, java 中getDeclaredFields() 与getFields() 的区别

        getDeclaredFields()返回Class中所有的字段，包括私有字段。例证：

            public class Person2 {  
                private int id;  
                private int age;  
                private String personName;  
                private Timestamp birthdate;  
                public String identitify;  
                protected String address;  
                String phone;      
            }  

            @Test  
            public void test_getDeclaredFields() {  
                Field[]fields=Person2.class.getDeclaredFields();  
                for (int i = 0; i < fields.length; i++) {  
                    Field field = fields[i];  
                    System.out.println(field.getName());  
                }  
            }  

            运行结果：

            id
            age
            personName
            birthdate
            identitify
            address
            phone

     
        getFields  只返回公共字段，即有public修饰的字段。例证：

            @Test  
            public void test_getDeclaredFields() {  
                Field[]fields=Person2.class.getFields();  
                for (int i = 0; i < fields.length; i++) {  
                    Field field = fields[i];  
                    System.out.println(field.getName());  
                }  
            }  

            运行结果如下：
            identitify

     

    总结：
    （1）getDeclaredFields()返回Class中所有的字段，包括私有字段；
    （2）getFields  只返回公共字段，即有public修饰的字段


    2, setAccessible()方法

        java代码中，常常将一个类的成员变量置为private，在类的外面获取此类的私有成员变量的value时，需要注意:

        public class AccessibleTest {  
  
            private int id;  
            private String name;  
          
            public AccessibleTest() {  
          
            }  
          
            public int getId() {  
                return id;  
            }  
          
            public void setId(int id) {  
                this.id = id;  
            }  
          
            public String getName() {  
                return name;  
            }  
          
            public void setName(String name) {  
                this.name = name;  
            }  
          
        }  

        public class Main {  
  
            public static void main(String[] args) throws Exception {  
                Class clazz = Class.forName("com.test.accessible.AccessibleTest");  
                AccessibleTest at = new AccessibleTest();  
                at.setId(1);  
                at.setName("AT");  
                for (Field f : clazz.getDeclaredFields()) {  
                    f.setAccessible(true);          //AccessibleTest类中的成员变量为private,故必须进行此操作  
                    System.out.println(f.get(at));  //获取当前对象中当前Field的value  
                }  
          
            }  
          
        }      

        如果没有在获取Field之前调用setAccessible(true)方法，异常：

         java.lang.IllegalAccessException:Class com.test.accessible.Main can not access a member of class com.test.accessible.AccessibleTest with modifiers "private"      

